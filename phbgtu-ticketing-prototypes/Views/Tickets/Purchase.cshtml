@model phbgtu_ticketing_prototypes.ViewModels.EventTicketPurchaseData

@{
    ViewData["Title"] = @Model.Event.EventName + " Ticket Purchase";
}

<h2>@Model.Event.EventName Ticket Purchase</h2>

<script src="https://www.paypalobjects.com/api/checkout.js"></script>

<div class="form-wrapper">
    <form id="user-form" method="post" action="" onsubmit="return false;" enctype="multipart/form-data">
        <fieldset id="" class="form-horizontal">
            <h3>Contact Information</h3>
            <div class="control-group">
                <label class="control-label" for="EmailAddress"><strong>Email Address</strong></label>
                <div class="controls">
                    <input name="EmailAddress" type="text" />
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="UserName"><strong>Name</strong></label>
                <div class="controls">
                    <input name="UserName" type="text" />
                </div>
            </div>
        </fieldset>
    </form>
</div>

<div class="form-wrapper">
    <form id="ticket-form" method="post" asp-action="Purchase" enctype="multipart/form-data">
        <fieldset id="ticket-quantity" class="form-horizontal">
            <h3>Tickets</h3>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>
                            Ticket Type
                        </th>
                        <th>
                            Price
                        </th>
                        <th>
                            Quantity
                        </th>
                        <th>
                            Total
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.EventTickets.Count(); i++)
                    {
                        var item = Model.EventTickets.ElementAt(i);
                        <tr>
                            <td>
                                @item.TicketType.TicketTypeName
                                <input type="hidden" name="tickets[@i].EventTicketID" id="tickets[@i].EventTicketID" value="@item.EventTicketID" />
                            </td>
                            <td>
                                &#3647; @item.TicketPrice
                                <input type="hidden" name="tickets[@i].TicketPrice" id="tickets[@i].TicketPrice" class="TicketPrice" value="@item.TicketPrice" />
                            </td>
                            <td>
                                <select name="ticketQuantity[@i]" id="ticketQuantity[@i]" class="TicketQuantity">

                                </select>
                            </td>
                            <td>
                                <span>&#3647; </span><span id="tickets[@i].RowTotal" class="RowTotal"></span>
                                <input type="hidden" name="RowTotal[@i]" class="RowTotal" />
                            </td>
                        </tr>

                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th colspan="2">
                            Totals:
                        </th>
                        <th>
                            <span>Tickets: </span><span id="ColumnTotal" class="ColumnTotal TicketQuantity"></span>
                        </th>
                        <th>
                            <span>&#3647; </span><span id="ColumnTotal" class="ColumnTotal TicketPrice"></span>
                        </th>
                    </tr>
                </tfoot>
            </table>

            <input type="hidden" name="userAccountID" id="userAccountID" />

            <div id="payment-div" class="hidden">
                <div id="paypal-button"></div>
                <div id="confirm" style="display: none;">
                    <div>Ship to:</div>
                    <div><span id="recipient"></span>, <span id="line1"></span>, <span id="city"></span></div>
                    <div><span id="state"></span>, <span id="zip"></span>, <span id="country"></span></div>
                    <button id="confirmButton" onclick="getUserAccount(this, event); return false;">Complete Payment</button>
                </div>
                <div id="thanks" style="display: none;">
                    Thanks, <span id="thanksname"></span>!
                </div>
                <script>
                    paypal.Button.render({

                        env: 'sandbox', // Or 'sandbox', 'production'

                        client: {
                            sandbox: 'ATjufowsvc1ggtf5vMdvG1c9PdEo22wYdm3HgeLpV6gMiRcY6frfEwNzYzbdYZ-iJpawqJC9Ts4HlriJ',
                            production: '<insert production client id>'
                        },

                        commit: true, // Show a 'Pay Now' button

                        payment: function (data, actions) {
                            // Set up the payment here
                            return actions.payment.create({
                                payment: {
                                    transactions: [
                                        {
                                            amount: { total: calculatePrice(), currency: 'THB' }

                                        }
                                    ]
                                }
                            });
                        },

                        onAuthorize: function (data, actions) {
                            // Execute the payment here
                            return actions.payment.execute().then(function (data) {
                                var shipping = data.payer.payer_info.shipping_address;

                                document.querySelector('#recipient').innerText = shipping.recipient_name;
                                document.querySelector('#line1').innerText = shipping.line1;
                                document.querySelector('#city').innerText = shipping.city;
                                document.querySelector('#state').innerText = shipping.state;
                                document.querySelector('#zip').innerText = shipping.postal_code;
                                document.querySelector('#country').innerText = shipping.country_code;

                                document.querySelector('#paypal-button').style.display = 'none';
                                document.querySelector('#confirm').style.display = 'block';

                                // Listen for click on confirm button

                                document.querySelector('#confirmButton').addEventListener('click', function () {

                                    // Disable the button and show a loading message

                                    document.querySelector('#confirm').innerText = 'Loading...';
                                    document.querySelector('#confirm').disabled = true;

                                    // Execute the payment

                                    return actions.payment.execute().then(function () {

                                        // Show a thank-you note

                                        document.querySelector('#thanksname').innerText = shipping.recipient_name;

                                        document.querySelector('#confirm').style.display = 'none';
                                        document.querySelector('#thanks').style.display = 'block';
                                    });
                                });
                            });
                        }

                    }, '#paypal-button');
                </script>
            </div>
        </fieldset>
        
        <!-- <fieldset id="ticket-data" class="form-horizontal hidden">
            <legend>Attendee Details</legend>
            <div id="attendee-data">
                <div class="control-group attendee-field" id="attendeeField1">
                    <label class="control-label" for="AttendeeName[1]"><strong>Attendee #1's name</strong></label>
                    <div class="controls">
                        <input name="AttendeeName[1]" type="text" class="input input-large">
                    </div>

                </div>
            </div>
            <br />
            <label class="control-label"><strong>This is your price:</strong></label>
            <p id="price"></p>
            <br />
            <br />
            
        </fieldset> -->

    </form>
</div>

<link rel="stylesheet" href="bootstrap.css" />
<style>
    .form-wrapper {
        width: 75%;
        margin: 0 auto 20px auto;
    }

    .form-horizontal {
        border: 1px solid black;
        padding: 15px;
    }

    .form-horizontal legend {
        border-color: inherit;
        text-align: center;
    }

    .hidden {
        display: none;
    }
</style>
<script type="text/javascript">

    var PayPalFinalAmount = 0;  //used to globally get the amount of attendees

    // Populates the quantity select drop-downs with options "" - 10
    $(function () {
        var maxTicketsPerCustomer = 10;
        var option = "<option value=\"{#}\">{#}</option>";
        $("select[name=numTickets]").append(option.replace(/\{#\}/g, ' '));
        $("select.TicketQuantity").append(option.replace(/\{#\}/g, ' '));
        for (var i = 1; i <= maxTicketsPerCustomer; i++) {
            $("select[name=numTickets]").append(option.replace(/\{#\}/g, i));
            $("select.TicketQuantity").append(option.replace(/\{#\}/g, i));
        }
        $("select[name=numTickets]").change();
        $("select.TicketQuantity").change();
    });

    /*
    function getAttendeeField(index) {
        var attendeeFieldContent = [
            '<div class="control-group attendee-field" id="attendeeField{#}">',
            '<label class="control-label" for="AttendeeName[{#}]"><strong>Attendee #{#}\'s name</strong></label>',
            '<div class="controls">',
            '<input name="AttendeeName[{#}]" type="text" class="input input-large">',
            '</div>',
            '</div>'
        ];

        return attendeeFieldContent.join("").replace(/\{#\}/g, index);
    }

    $("select[name=numTickets]").change(function () {

        var attendeeFields = $(".attendee-field");
        var attendeeFieldCount = attendeeFields.length;
        var attendeeCount = $("option:selected", this).val();
        document.getElementById("price").innerHTML = "&#3647;" + (attendeeCount * 168);
        PayPalFinalAmount = (attendeeCount * 168);

        if (attendeeCount == 0)
            $("#ticket-data").addClass("hidden");
        else
            $("#ticket-data").removeClass("hidden");

        if (attendeeFieldCount < attendeeCount) {
            for (var i = attendeeFieldCount; i < attendeeCount; i++) {
                $("#attendee-data").append(getAttendeeField(i + 1));
            }
        }
        else if (attendeeFieldCount > attendeeCount) {
            for (var i = attendeeFieldCount; i >= attendeeCount; i--) {
                $("#attendeeField" + (i + 1)).remove();
            }
        }
    });
    */

    function calculatePrice() {
        var attendeeCount = $("option:selected", this).val();
        var CountAfterMath = (attendeeCount * 168);
        var FinalCount = (PayPalFinalAmount + ".00").toString();
        return FinalCount;
    }

    // Update the table and the global values when the user changes ticket quantities:
    $(".TicketQuantity").change(function () {
        calculateRowTotal(this);
    });

    function calculateRowTotal(el)
    {
        var tr = $(el).closest("tr");
        var rowTotalSpan = $(tr).find("span.RowTotal");
        var rowTotalInput = $(tr).find("input.RowTotal");
        var calculation = parseFloat($(tr).find(".TicketPrice").val()) * parseFloat($(tr).find(".TicketQuantity option:selected").val());

        if (isNaN(calculation)) {
            rowTotalSpan.html("0.00");
            rowTotalInput.val(0);
        }
        else {
            rowTotalSpan.html(calculation + ".00");
            rowTotalInput.val(calculation);
        }
        
        calculateTableTotal(el);
    }

    function calculateTableTotal(el)
    {
        var table = $(el).closest("table");
        var total = 0;
        var val = 0;

        // Total Price
        $.each(table.find("input.RowTotal"), function (index, input) {
            val = $(input).val();
            total += (val == "" ? 0 : parseFloat(val));
        });
        table.find("span.ColumnTotal.TicketPrice").html(total + ".00");
        table.find("input.ColumnTotal.TicketPrice").val(total);
        PayPalFinalAmount = total;  //used to globally set the total price

        // Total Quantity of Tickets
        total = 0;
        $.each(table.find("select.TicketQuantity"), function (index, select) {
            val = $("option:selected", select).val();
                        
            total += (val == "" ? 0 : parseFloat(val));
        });
        table.find("span.ColumnTotal.TicketQuantity").html(total);

        $("#payment-div").toggleClass("hidden", (parseFloat(total) < 1));
    }


    // Uses AJAX to query the UserAccountID from the DB, filtering by the customer's email.
    function getUserAccount(el, ev) {
        // Prevent the default action from happening (such as if the browser thinks it should submit the form).
        ev.preventDefault();
        // Compile the form data in the first form into a POST string
        var postData = $("#user-form").serialize();

        // Submit the first form's data using AJAX to the UserAccount Controller's customized action to create a user account
        $.ajax({
            url: "/UserAccounts/CheckUserAccount", // Controller/Function: this function checks the user account and creates one if it doesn't exist. It returns a JSON object with the ID.
            data: postData, // The user info form data
            type: "POST", // The type of request to send: POST
            dataType: "text", // They type of response to expect: JSON
            success: function (data) {
                //alert("Success!"); // For Debugging (remove once it works)
                data = JSON.parse(data);
                // alert(data.UserAccountID);

                // Assign the response value to the hidden UserAccountID field in the second form
                // (relies on the response being a JSON object with a UserAcountID attribute)
                $("#userAccountID").val(data.UserAccountID);

                // Submit the second form (to add tickets to the DB)
                // The controller function/action (asp-action) that this submits to is in the form element.
                // That function will need to be developed in the controller.
                // The function/action should then call the confirmation action (Stephen in working on that)
                $("#ticket-form").submit();
                // url = "/Tickets/PurchaseConfirmation/" + data.UserAccountID;
                // window.location.href = url;
            },
            failure: function () {
                alert("Failed"); // For debugging (hopefully we won't need to see this)
            }
        });
    }
</script>